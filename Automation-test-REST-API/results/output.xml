<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.2 on win32)" generated="20230201 17:31:05.748" rpa="false">
<suite id="s1" name="VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames">
<suite id="s1-s1" name="TC1 001 Get request VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC1_001_Get_request_VideoGames.robot">
<test id="s1-s1-t1" name="TC_Return_all_the_video_games_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230201 17:31:05.966" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230201 17:31:05.966" endtime="20230201 17:31:05.966"></status>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames</arg>
</arguments>
<assign>
<var>${Get_Response}</var>
</assign>
<msg timestamp="20230201 17:31:05.977" level="INFO">GET Request : url=http://localhost:8080/app/videogames 
 path_url=/app/videogames 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230201 17:31:05.977" level="INFO">GET Response : url=http://localhost:8080/app/videogames 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '2196', 'Date': 'Wed, 01 Feb 2023 21:31:05 GMT'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGames&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;0&lt;/id&gt;&lt;name&gt;string&lt;/name&gt;&lt;releaseDate&gt;2023-02-01T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Shooter" rating="Universal"&gt;&lt;id&gt;1&lt;/id&gt;&lt;name&gt;Resident Evil 4&lt;/name&gt;&lt;releaseDate&gt;2005-10-01T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;85&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Driving" rating="Universal"&gt;&lt;id&gt;2&lt;/id&gt;&lt;name&gt;Gran Turismo 3&lt;/name&gt;&lt;releaseDate&gt;2001-03-10T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;91&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Puzzle" rating="Universal"&gt;&lt;id&gt;3&lt;/id&gt;&lt;name&gt;Tetris&lt;/name&gt;&lt;releaseDate&gt;1984-06-25T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;88&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Platform" rating="Universal"&gt;&lt;id&gt;4&lt;/id&gt;&lt;name&gt;Super Mario 64&lt;/name&gt;&lt;releaseDate&gt;1996-10-20T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;90&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Adventure" rating="PG-13"&gt;&lt;id&gt;5&lt;/id&gt;&lt;name&gt;The Legend of Zelda: Ocarina of Time&lt;/name&gt;&lt;releaseDate&gt;1998-12-10T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;93&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Shooter" rating="Mature"&gt;&lt;id&gt;6&lt;/id&gt;&lt;name&gt;Doom&lt;/name&gt;&lt;releaseDate&gt;1993-02-18T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;81&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Puzzle" rating="Universal"&gt;&lt;id&gt;7&lt;/id&gt;&lt;name&gt;Minecraft&lt;/name&gt;&lt;releaseDate&gt;2011-12-05T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;77&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Strategy" rating="Universal"&gt;&lt;id&gt;8&lt;/id&gt;&lt;name&gt;SimCity 2000&lt;/name&gt;&lt;releaseDate&gt;1994-09-11T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;88&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="RPG" rating="PG-13"&gt;&lt;id&gt;9&lt;/id&gt;&lt;name&gt;Final Fantasy VII&lt;/name&gt;&lt;releaseDate&gt;1997-08-20T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;97&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Driving" rating="Mature"&gt;&lt;id&gt;10&lt;/id&gt;&lt;name&gt;Grand Theft Auto III&lt;/name&gt;&lt;releaseDate&gt;2001-04-23T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;90&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;100&lt;/id&gt;&lt;name&gt;string&lt;/name&gt;&lt;releaseDate&gt;2023-02-01T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;/videoGames&gt; 
 </msg>
<msg timestamp="20230201 17:31:05.977" level="INFO">${Get_Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230201 17:31:05.966" endtime="20230201 17:31:05.977"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230201 17:31:05.978" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230201 17:31:05.978" endtime="20230201 17:31:05.978"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.978" endtime="20230201 17:31:05.978"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Get_Response.content}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.979" endtime="20230201 17:31:05.980"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230201 17:31:05.980" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230201 17:31:05.980" endtime="20230201 17:31:05.981"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.981" endtime="20230201 17:31:05.981"></status>
</kw>
<status status="PASS" starttime="20230201 17:31:05.965" endtime="20230201 17:31:05.981" critical="yes"></status>
</test>
<status status="PASS" starttime="20230201 17:31:05.770" endtime="20230201 17:31:05.982"></status>
</suite>
<suite id="s1-s2" name="TC2 002 Post request VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC2_002_Post_request_VideoGames.robot">
<test id="s1-s2-t1" name="TC_Return_all_the_video_games_POST">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230201 17:31:05.987" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230201 17:31:05.987" endtime="20230201 17:31:05.987"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=102</arg>
<arg>name=Spider-Man</arg>
<arg>releaseDate=2023-01-29T01:01:12.936Z</arg>
<arg>reviewScore=0</arg>
<arg>category=string</arg>
<arg>rating=string</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230201 17:31:05.988" level="INFO">${body} = {'id': '102', 'name': 'Spider-Man', 'releaseDate': '2023-01-29T01:01:12.936Z', 'reviewScore': '0', 'category': 'string', 'rating': 'string'}</msg>
<status status="PASS" starttime="20230201 17:31:05.987" endtime="20230201 17:31:05.988"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230201 17:31:05.988" level="INFO">${body} = {"id": "102", "name": "Spider-Man", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"}</msg>
<status status="PASS" starttime="20230201 17:31:05.988" endtime="20230201 17:31:05.988"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20230201 17:31:05.989" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230201 17:31:05.989" endtime="20230201 17:31:05.989"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${header}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.989" endtime="20230201 17:31:05.989"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.989" endtime="20230201 17:31:05.990"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20230201 17:31:05.995" level="INFO">POST Request : url=http://localhost:8080/app/videogames 
 path_url=/app/videogames 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '140'} 
 body={"id": "102", "name": "Spider-Man", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"} 
 </msg>
<msg timestamp="20230201 17:31:05.995" level="INFO">POST Response : url=http://localhost:8080/app/videogames 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '39', 'Date': 'Wed, 01 Feb 2023 21:31:05 GMT'} 
 body={"status": "Record Added Successfully"} 
 </msg>
<msg timestamp="20230201 17:31:05.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230201 17:31:05.990" endtime="20230201 17:31:05.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.995" endtime="20230201 17:31:05.996"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.996" endtime="20230201 17:31:05.996"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.997" endtime="20230201 17:31:05.997"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230201 17:31:05.997" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230201 17:31:05.997" endtime="20230201 17:31:05.997"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.998" endtime="20230201 17:31:05.998"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230201 17:31:05.998" level="INFO">${res_body} = {"status": "Record Added Successfully"}</msg>
<status status="PASS" starttime="20230201 17:31:05.998" endtime="20230201 17:31:05.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Record Added Successfully</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:05.999" endtime="20230201 17:31:05.999"></status>
</kw>
<status status="PASS" starttime="20230201 17:31:05.986" endtime="20230201 17:31:05.999" critical="yes"></status>
</test>
<status status="PASS" starttime="20230201 17:31:05.983" endtime="20230201 17:31:06.000"></status>
</suite>
<suite id="s1-s3" name="TC3 003 Get request VideoGames single video Game" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC3_003_Get_request_VideoGames_single_video_Game.robot">
<test id="s1-s3-t1" name="TC_Return_all_the_video_games_GET_single_video_game">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230201 17:31:06.005" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230201 17:31:06.005" endtime="20230201 17:31:06.005"></status>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames/102</arg>
</arguments>
<assign>
<var>${Get_Response}</var>
</assign>
<msg timestamp="20230201 17:31:06.009" level="INFO">GET Request : url=http://localhost:8080/app/videogames/102 
 path_url=/app/videogames/102 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230201 17:31:06.009" level="INFO">GET Response : url=http://localhost:8080/app/videogames/102 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '227', 'Date': 'Wed, 01 Feb 2023 21:31:05 GMT'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Spider-Man&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/reviewScore&gt;&lt;/videoGame&gt; 
 </msg>
<msg timestamp="20230201 17:31:06.009" level="INFO">${Get_Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230201 17:31:06.005" endtime="20230201 17:31:06.009"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230201 17:31:06.010" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230201 17:31:06.010" endtime="20230201 17:31:06.010"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.010" endtime="20230201 17:31:06.011"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230201 17:31:06.012" level="INFO">${res_body} = &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Spider-Man&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;...</msg>
<status status="PASS" starttime="20230201 17:31:06.011" endtime="20230201 17:31:06.012"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_body}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.012" endtime="20230201 17:31:06.012"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230201 17:31:06.013" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230201 17:31:06.012" endtime="20230201 17:31:06.013"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.013" endtime="20230201 17:31:06.013"></status>
</kw>
<status status="PASS" starttime="20230201 17:31:06.004" endtime="20230201 17:31:06.013" critical="yes"></status>
</test>
<status status="PASS" starttime="20230201 17:31:06.001" endtime="20230201 17:31:06.014"></status>
</suite>
<suite id="s1-s4" name="TC4 004 Put request VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC4_004_Put_request_VideoGames.robot">
<test id="s1-s4-t1" name="TC_Return_all_the_video_games_POST">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230201 17:31:06.019" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230201 17:31:06.019" endtime="20230201 17:31:06.020"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=102</arg>
<arg>name=Pacman</arg>
<arg>releaseDate=2023-01-29T01:01:12.936Z</arg>
<arg>reviewScore=0</arg>
<arg>category=string</arg>
<arg>rating=string</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230201 17:31:06.020" level="INFO">${body} = {'id': '102', 'name': 'Pacman', 'releaseDate': '2023-01-29T01:01:12.936Z', 'reviewScore': '0', 'category': 'string', 'rating': 'string'}</msg>
<status status="PASS" starttime="20230201 17:31:06.020" endtime="20230201 17:31:06.020"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230201 17:31:06.021" level="INFO">${body} = {"id": "102", "name": "Pacman", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"}</msg>
<status status="PASS" starttime="20230201 17:31:06.020" endtime="20230201 17:31:06.021"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20230201 17:31:06.021" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230201 17:31:06.021" endtime="20230201 17:31:06.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${header}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.021" endtime="20230201 17:31:06.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.022" endtime="20230201 17:31:06.022"></status>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames/102</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20230201 17:31:06.029" level="INFO">PUT Request : url=http://localhost:8080/app/videogames/102 
 path_url=/app/videogames/102 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '136'} 
 body={"id": "102", "name": "Pacman", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"} 
 </msg>
<msg timestamp="20230201 17:31:06.029" level="INFO">PUT Response : url=http://localhost:8080/app/videogames/102 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '223', 'Date': 'Wed, 01 Feb 2023 21:31:05 GMT'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Pacman&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/reviewScore&gt;&lt;/videoGame&gt; 
 </msg>
<msg timestamp="20230201 17:31:06.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230201 17:31:06.022" endtime="20230201 17:31:06.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.029" endtime="20230201 17:31:06.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.030" endtime="20230201 17:31:06.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.030" endtime="20230201 17:31:06.031"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230201 17:31:06.031" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230201 17:31:06.031" endtime="20230201 17:31:06.031"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.032" endtime="20230201 17:31:06.032"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230201 17:31:06.032" level="INFO">${res_body} = &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Pacman&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/r...</msg>
<status status="PASS" starttime="20230201 17:31:06.032" endtime="20230201 17:31:06.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Pacman</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.033" endtime="20230201 17:31:06.033"></status>
</kw>
<status status="PASS" starttime="20230201 17:31:06.018" endtime="20230201 17:31:06.033" critical="yes"></status>
</test>
<status status="PASS" starttime="20230201 17:31:06.015" endtime="20230201 17:31:06.033"></status>
</suite>
<suite id="s1-s5" name="TC5 005 delete VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC5_005_delete_VideoGames.robot">
<test id="s1-s5-t1" name="TC_DELETE_the_video_games">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230201 17:31:06.039" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230201 17:31:06.039" endtime="20230201 17:31:06.039"></status>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames/102</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20230201 17:31:06.044" level="INFO">DELETE Request : url=http://localhost:8080/app/videogames/102 
 path_url=/app/videogames/102 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230201 17:31:06.044" level="INFO">DELETE Response : url=http://localhost:8080/app/videogames/102 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '41', 'Date': 'Wed, 01 Feb 2023 21:31:05 GMT'} 
 body={"status": "Record Deleted Successfully"} 
 </msg>
<msg timestamp="20230201 17:31:06.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230201 17:31:06.039" endtime="20230201 17:31:06.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.044" endtime="20230201 17:31:06.045"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.045" endtime="20230201 17:31:06.045"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.046" endtime="20230201 17:31:06.046"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230201 17:31:06.047" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230201 17:31:06.046" endtime="20230201 17:31:06.047"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.047" endtime="20230201 17:31:06.047"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230201 17:31:06.048" level="INFO">${res_body} = {"status": "Record Deleted Successfully"}</msg>
<status status="PASS" starttime="20230201 17:31:06.047" endtime="20230201 17:31:06.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Record Deleted Successfully</arg>
</arguments>
<status status="PASS" starttime="20230201 17:31:06.048" endtime="20230201 17:31:06.048"></status>
</kw>
<status status="PASS" starttime="20230201 17:31:06.038" endtime="20230201 17:31:06.048" critical="yes"></status>
</test>
<status status="PASS" starttime="20230201 17:31:06.035" endtime="20230201 17:31:06.049"></status>
</suite>
<status status="PASS" starttime="20230201 17:31:05.749" endtime="20230201 17:31:06.050"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="VideoGames">VideoGames</stat>
<stat pass="1" fail="0" id="s1-s1" name="TC1 001 Get request VideoGames">VideoGames.TC1 001 Get request VideoGames</stat>
<stat pass="1" fail="0" id="s1-s2" name="TC2 002 Post request VideoGames">VideoGames.TC2 002 Post request VideoGames</stat>
<stat pass="1" fail="0" id="s1-s3" name="TC3 003 Get request VideoGames single video Game">VideoGames.TC3 003 Get request VideoGames single video Game</stat>
<stat pass="1" fail="0" id="s1-s4" name="TC4 004 Put request VideoGames">VideoGames.TC4 004 Put request VideoGames</stat>
<stat pass="1" fail="0" id="s1-s5" name="TC5 005 delete VideoGames">VideoGames.TC5 005 delete VideoGames</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
