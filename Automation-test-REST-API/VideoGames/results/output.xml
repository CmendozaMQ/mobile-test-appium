<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.2 on win32)" generated="20230202 20:03:12.612" rpa="false">
<suite id="s1" name="VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames">
<suite id="s1-s1" name="TC1 001 Get request VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC1_001_Get_request_VideoGames.robot">
<test id="s1-s1-t1" name="TC_Return_all_the_video_games_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230202 20:03:12.876" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230202 20:03:12.875" endtime="20230202 20:03:12.876"></status>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames</arg>
</arguments>
<assign>
<var>${Get_Response}</var>
</assign>
<msg timestamp="20230202 20:03:12.892" level="INFO">GET Request : url=http://localhost:8080/app/videogames 
 path_url=/app/videogames 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230202 20:03:12.892" level="INFO">GET Response : url=http://localhost:8080/app/videogames 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '1862', 'Date': 'Fri, 03 Feb 2023 00:03:12 GMT'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGames&gt;&lt;videoGame category="Shooter" rating="Universal"&gt;&lt;id&gt;1&lt;/id&gt;&lt;name&gt;Resident Evil 4&lt;/name&gt;&lt;releaseDate&gt;2005-10-01T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;85&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Driving" rating="Universal"&gt;&lt;id&gt;2&lt;/id&gt;&lt;name&gt;Gran Turismo 3&lt;/name&gt;&lt;releaseDate&gt;2001-03-10T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;91&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Puzzle" rating="Universal"&gt;&lt;id&gt;3&lt;/id&gt;&lt;name&gt;Tetris&lt;/name&gt;&lt;releaseDate&gt;1984-06-25T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;88&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Platform" rating="Universal"&gt;&lt;id&gt;4&lt;/id&gt;&lt;name&gt;Super Mario 64&lt;/name&gt;&lt;releaseDate&gt;1996-10-20T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;90&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Adventure" rating="PG-13"&gt;&lt;id&gt;5&lt;/id&gt;&lt;name&gt;The Legend of Zelda: Ocarina of Time&lt;/name&gt;&lt;releaseDate&gt;1998-12-10T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;93&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Shooter" rating="Mature"&gt;&lt;id&gt;6&lt;/id&gt;&lt;name&gt;Doom&lt;/name&gt;&lt;releaseDate&gt;1993-02-18T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;81&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Puzzle" rating="Universal"&gt;&lt;id&gt;7&lt;/id&gt;&lt;name&gt;Minecraft&lt;/name&gt;&lt;releaseDate&gt;2011-12-05T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;77&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Strategy" rating="Universal"&gt;&lt;id&gt;8&lt;/id&gt;&lt;name&gt;SimCity 2000&lt;/name&gt;&lt;releaseDate&gt;1994-09-11T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;88&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="RPG" rating="PG-13"&gt;&lt;id&gt;9&lt;/id&gt;&lt;name&gt;Final Fantasy VII&lt;/name&gt;&lt;releaseDate&gt;1997-08-20T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;97&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;videoGame category="Driving" rating="Mature"&gt;&lt;id&gt;10&lt;/id&gt;&lt;name&gt;Grand Theft Auto III&lt;/name&gt;&lt;releaseDate&gt;2001-04-23T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;90&lt;/reviewScore&gt;&lt;/videoGame&gt;&lt;/videoGames&gt; 
 </msg>
<msg timestamp="20230202 20:03:12.892" level="INFO">${Get_Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230202 20:03:12.876" endtime="20230202 20:03:12.892"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230202 20:03:12.893" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230202 20:03:12.892" endtime="20230202 20:03:12.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.893" endtime="20230202 20:03:12.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Get_Response.content}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.893" endtime="20230202 20:03:12.894"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230202 20:03:12.894" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230202 20:03:12.894" endtime="20230202 20:03:12.894"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.896" endtime="20230202 20:03:12.896"></status>
</kw>
<status status="PASS" starttime="20230202 20:03:12.875" endtime="20230202 20:03:12.896" critical="yes"></status>
</test>
<status status="PASS" starttime="20230202 20:03:12.636" endtime="20230202 20:03:12.896"></status>
</suite>
<suite id="s1-s2" name="TC2 002 Post request VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC2_002_Post_request_VideoGames.robot">
<test id="s1-s2-t1" name="TC_Return_the_video_games_POST_by_id">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230202 20:03:12.903" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230202 20:03:12.901" endtime="20230202 20:03:12.903"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=102</arg>
<arg>name=Spider-Man</arg>
<arg>releaseDate=2023-01-29T01:01:12.936Z</arg>
<arg>reviewScore=0</arg>
<arg>category=string</arg>
<arg>rating=string</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230202 20:03:12.903" level="INFO">${body} = {'id': '102', 'name': 'Spider-Man', 'releaseDate': '2023-01-29T01:01:12.936Z', 'reviewScore': '0', 'category': 'string', 'rating': 'string'}</msg>
<status status="PASS" starttime="20230202 20:03:12.903" endtime="20230202 20:03:12.903"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230202 20:03:12.904" level="INFO">${body} = {"id": "102", "name": "Spider-Man", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"}</msg>
<status status="PASS" starttime="20230202 20:03:12.903" endtime="20230202 20:03:12.904"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20230202 20:03:12.904" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230202 20:03:12.904" endtime="20230202 20:03:12.904"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${header}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.904" endtime="20230202 20:03:12.905"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.905" endtime="20230202 20:03:12.905"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20230202 20:03:12.911" level="INFO">POST Request : url=http://localhost:8080/app/videogames 
 path_url=/app/videogames 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '140'} 
 body={"id": "102", "name": "Spider-Man", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"} 
 </msg>
<msg timestamp="20230202 20:03:12.912" level="INFO">POST Response : url=http://localhost:8080/app/videogames 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '39', 'Date': 'Fri, 03 Feb 2023 00:03:12 GMT'} 
 body={"status": "Record Added Successfully"} 
 </msg>
<msg timestamp="20230202 20:03:12.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230202 20:03:12.905" endtime="20230202 20:03:12.912"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.913" endtime="20230202 20:03:12.913"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.913" endtime="20230202 20:03:12.913"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.914" endtime="20230202 20:03:12.914"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230202 20:03:12.915" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230202 20:03:12.914" endtime="20230202 20:03:12.915"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.915" endtime="20230202 20:03:12.915"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230202 20:03:12.916" level="INFO">${res_body} = {"status": "Record Added Successfully"}</msg>
<status status="PASS" starttime="20230202 20:03:12.915" endtime="20230202 20:03:12.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Record Added Successfully</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.916" endtime="20230202 20:03:12.916"></status>
</kw>
<status status="PASS" starttime="20230202 20:03:12.901" endtime="20230202 20:03:12.916" critical="yes"></status>
</test>
<status status="PASS" starttime="20230202 20:03:12.898" endtime="20230202 20:03:12.917"></status>
</suite>
<suite id="s1-s3" name="TC3 003 Get request VideoGames single video Game" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC3_003_Get_request_VideoGames_single_video_Game.robot">
<test id="s1-s3-t1" name="TC3_Get_request_VideoGames_single_video_Game">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230202 20:03:12.922" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230202 20:03:12.922" endtime="20230202 20:03:12.922"></status>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames/102</arg>
</arguments>
<assign>
<var>${Get_Response}</var>
</assign>
<msg timestamp="20230202 20:03:12.928" level="INFO">GET Request : url=http://localhost:8080/app/videogames/102 
 path_url=/app/videogames/102 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230202 20:03:12.928" level="INFO">GET Response : url=http://localhost:8080/app/videogames/102 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '227', 'Date': 'Fri, 03 Feb 2023 00:03:12 GMT'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Spider-Man&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/reviewScore&gt;&lt;/videoGame&gt; 
 </msg>
<msg timestamp="20230202 20:03:12.928" level="INFO">${Get_Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230202 20:03:12.923" endtime="20230202 20:03:12.928"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230202 20:03:12.929" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230202 20:03:12.928" endtime="20230202 20:03:12.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.929" endtime="20230202 20:03:12.930"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230202 20:03:12.930" level="INFO">${res_body} = &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Spider-Man&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;...</msg>
<status status="PASS" starttime="20230202 20:03:12.930" endtime="20230202 20:03:12.930"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_body}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.931" endtime="20230202 20:03:12.931"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Get_Response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230202 20:03:12.932" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230202 20:03:12.931" endtime="20230202 20:03:12.932"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.932" endtime="20230202 20:03:12.932"></status>
</kw>
<status status="PASS" starttime="20230202 20:03:12.922" endtime="20230202 20:03:12.932" critical="yes"></status>
</test>
<status status="PASS" starttime="20230202 20:03:12.919" endtime="20230202 20:03:12.934"></status>
</suite>
<suite id="s1-s4" name="TC4 004 Put request VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC4_004_Put_request_VideoGames.robot">
<test id="s1-s4-t1" name="TC_PUT_request_VideoGames">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230202 20:03:12.939" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230202 20:03:12.939" endtime="20230202 20:03:12.939"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=102</arg>
<arg>name=Pacman</arg>
<arg>releaseDate=2023-01-29T01:01:12.936Z</arg>
<arg>reviewScore=0</arg>
<arg>category=string</arg>
<arg>rating=string</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230202 20:03:12.939" level="INFO">${body} = {'id': '102', 'name': 'Pacman', 'releaseDate': '2023-01-29T01:01:12.936Z', 'reviewScore': '0', 'category': 'string', 'rating': 'string'}</msg>
<status status="PASS" starttime="20230202 20:03:12.939" endtime="20230202 20:03:12.939"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20230202 20:03:12.940" level="INFO">${body} = {"id": "102", "name": "Pacman", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"}</msg>
<status status="PASS" starttime="20230202 20:03:12.940" endtime="20230202 20:03:12.940"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20230202 20:03:12.940" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230202 20:03:12.940" endtime="20230202 20:03:12.940"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${header}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.941" endtime="20230202 20:03:12.941"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.941" endtime="20230202 20:03:12.941"></status>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames/102</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20230202 20:03:12.949" level="INFO">PUT Request : url=http://localhost:8080/app/videogames/102 
 path_url=/app/videogames/102 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '136'} 
 body={"id": "102", "name": "Pacman", "releaseDate": "2023-01-29T01:01:12.936Z", "reviewScore": "0", "category": "string", "rating": "string"} 
 </msg>
<msg timestamp="20230202 20:03:12.949" level="INFO">PUT Response : url=http://localhost:8080/app/videogames/102 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '223', 'Date': 'Fri, 03 Feb 2023 00:03:12 GMT'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Pacman&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/reviewScore&gt;&lt;/videoGame&gt; 
 </msg>
<msg timestamp="20230202 20:03:12.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230202 20:03:12.941" endtime="20230202 20:03:12.951"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.951" endtime="20230202 20:03:12.952"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.952" endtime="20230202 20:03:12.953"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.953" endtime="20230202 20:03:12.954"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230202 20:03:12.954" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230202 20:03:12.954" endtime="20230202 20:03:12.954"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.954" endtime="20230202 20:03:12.955"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230202 20:03:12.955" level="INFO">${res_body} = &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;videoGame category="string" rating="string"&gt;&lt;id&gt;102&lt;/id&gt;&lt;name&gt;Pacman&lt;/name&gt;&lt;releaseDate&gt;2023-01-28T00:00:00-04:00&lt;/releaseDate&gt;&lt;reviewScore&gt;0&lt;/r...</msg>
<status status="PASS" starttime="20230202 20:03:12.955" endtime="20230202 20:03:12.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Pacman</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.955" endtime="20230202 20:03:12.955"></status>
</kw>
<status status="PASS" starttime="20230202 20:03:12.938" endtime="20230202 20:03:12.956" critical="yes"></status>
</test>
<status status="PASS" starttime="20230202 20:03:12.935" endtime="20230202 20:03:12.956"></status>
</suite>
<suite id="s1-s5" name="TC5 005 delete VideoGames" source="C:\mobile-test-appium\Automation-test-REST-API\VideoGames\TC5_005_delete_VideoGames.robot">
<test id="s1-s5-t1" name="TC_DELETE_the_video_games">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>API_Testing</arg>
<arg>${API_Base_Endpoint}</arg>
</arguments>
<msg timestamp="20230202 20:03:12.961" level="INFO">Creating Session using : alias=API_Testing, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230202 20:03:12.961" endtime="20230202 20:03:12.962"></status>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<arguments>
<arg>API_Testing</arg>
<arg>/app/videogames/102</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20230202 20:03:12.968" level="INFO">DELETE Request : url=http://localhost:8080/app/videogames/102 
 path_url=/app/videogames/102 
 headers={'User-Agent': 'python-requests/2.25.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230202 20:03:12.968" level="INFO">DELETE Response : url=http://localhost:8080/app/videogames/102 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '41', 'Date': 'Fri, 03 Feb 2023 00:03:12 GMT'} 
 body={"status": "Record Deleted Successfully"} 
 </msg>
<msg timestamp="20230202 20:03:12.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230202 20:03:12.962" endtime="20230202 20:03:12.968"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.969" endtime="20230202 20:03:12.969"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.969" endtime="20230202 20:03:12.970"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.970" endtime="20230202 20:03:12.970"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20230202 20:03:12.971" level="INFO">${statusCode} = 200</msg>
<status status="PASS" starttime="20230202 20:03:12.970" endtime="20230202 20:03:12.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statusCode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.971" endtime="20230202 20:03:12.971"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${res_body}</var>
</assign>
<msg timestamp="20230202 20:03:12.972" level="INFO">${res_body} = {"status": "Record Deleted Successfully"}</msg>
<status status="PASS" starttime="20230202 20:03:12.971" endtime="20230202 20:03:12.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res_body}</arg>
<arg>Record Deleted Successfully</arg>
</arguments>
<status status="PASS" starttime="20230202 20:03:12.972" endtime="20230202 20:03:12.972"></status>
</kw>
<status status="PASS" starttime="20230202 20:03:12.961" endtime="20230202 20:03:12.972" critical="yes"></status>
</test>
<status status="PASS" starttime="20230202 20:03:12.957" endtime="20230202 20:03:12.973"></status>
</suite>
<status status="PASS" starttime="20230202 20:03:12.613" endtime="20230202 20:03:12.974"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="VideoGames">VideoGames</stat>
<stat pass="1" fail="0" id="s1-s1" name="TC1 001 Get request VideoGames">VideoGames.TC1 001 Get request VideoGames</stat>
<stat pass="1" fail="0" id="s1-s2" name="TC2 002 Post request VideoGames">VideoGames.TC2 002 Post request VideoGames</stat>
<stat pass="1" fail="0" id="s1-s3" name="TC3 003 Get request VideoGames single video Game">VideoGames.TC3 003 Get request VideoGames single video Game</stat>
<stat pass="1" fail="0" id="s1-s4" name="TC4 004 Put request VideoGames">VideoGames.TC4 004 Put request VideoGames</stat>
<stat pass="1" fail="0" id="s1-s5" name="TC5 005 delete VideoGames">VideoGames.TC5 005 delete VideoGames</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
